{"version":3,"sources":["store/app-actions.js","store/numbers-actions.js","components/numbers.js","components/app.js","store/app-reducers.js","store/numbers-reducer.js","store/index.js","index.js"],"names":["appActions","payload","type","actions","changeNum","resetNum","Number","changeMyNumber","max","randNum","Math","floor","random","_this","props","handleChange","react_default","a","createElement","Fragment","onClick","this","numbers","currentNumber","handleReset","React","Component","connect","state","dispatch","getState","newNumber","App","changeMyName","words","word","length","app","name","newName","change","initialState","reducers","combineReducers","arguments","undefined","action","store","createStore","rootElement","document","getElementById","ReactDOM","render","es"],"mappings":"gPACMA,EAAa,CAEnBA,OAAoB,SAAAC,GAClB,MAAO,CACLC,KAAM,SACND,QAASA,IAIbD,MAAmB,SAAAC,GACjB,MAAO,CACLC,KAAM,QACND,QAASA,KCZPE,EAAU,GAEhBA,EAAQC,UAAY,SAAAH,GAClB,MAAO,CACLC,KAAM,SACND,QAASA,IAIbE,EAAQE,SAAW,SAAAJ,GACjB,MAAO,CACLC,KAAM,QACND,QAASA,QCHPK,6MAEJC,eAAiB,WAEf,IARkBC,EAQdC,GARcD,EAQS,IAPtBE,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMH,KAQ3CK,EAAKC,MAAMC,aAAaN,4EAKxB,OACEO,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACAH,EAAAC,EAAAC,cAAA,OAAKE,QAASC,KAAKd,gBAAnB,WACWc,KAAKP,MAAMQ,QAAQC,eAE9BP,EAAAC,EAAAC,cAAA,OAAKE,QAASC,KAAKP,MAAMU,aAAzB,iBAfeC,IAAMC,WAgCZC,cATS,SAAAC,GAAK,MAAK,CAChCN,QAASM,EAAMN,UAGU,SAACO,EAAUC,GAAX,MAAyB,CAClDf,aAAc,SAACgB,GAAD,OAAeF,EAAS1B,EAAQC,UAAU2B,KACxDP,YAAa,kBAAMK,EAAS1B,EAAQE,eAGvBsB,CAGbrB,GCvCI0B,6MAEJC,aAAe,WACb,IAAIC,EAAQ,CAAC,MAAM,MAAM,OACrBC,EAAOD,EAAOxB,KAAKC,MAAMD,KAAKE,SAASsB,EAAME,SACjDvB,EAAKC,MAAMC,aAAaoB,4EAIxB,OACEnB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACAH,EAAAC,EAAAC,cAACI,EAAD,MACAN,EAAAC,EAAAC,cAAA,OAAKE,QAASC,KAAKY,cAAnB,SACSZ,KAAKP,MAAMuB,IAAIC,cAbZb,IAAMC,WA4BTC,cARS,SAAAC,GAAK,MAAK,CAChCS,IAAKT,EAAMS,MAGc,SAACR,EAAUC,GAAX,MAAyB,CAClDf,aAAc,SAACwB,GAAD,OAAaV,EAAS7B,EAAWwC,OAAOD,OAGzCZ,CAGbK,UCrCES,EAAe,CAAEH,KAAM,QCAvBG,EAAe,CAAElB,cAAe,ICKhCmB,EAAWC,YAAgB,CAC7BN,IFJa,WAAkC,IAAjCT,EAAiCgB,UAAAR,OAAA,QAAAS,IAAAD,UAAA,GAAAA,UAAA,GAAzBH,EAAcK,EAAWF,UAAAR,OAAA,EAAAQ,UAAA,QAAAC,EACzC3C,EAAkB4C,EAAlB5C,KAAMD,EAAY6C,EAAZ7C,QAEZ,OAAQC,GACN,IAAK,SACH,MAAO,CAAEoC,KAAMrC,GAAWS,KAAKE,UAEjC,QACE,OAAOgB,IEHXN,QDLa,WAAkC,IAAjCM,EAAiCgB,UAAAR,OAAA,QAAAS,IAAAD,UAAA,GAAAA,UAAA,GAAzBH,EAAcK,EAAWF,UAAAR,OAAA,EAAAQ,UAAA,QAAAC,EACzC3C,EAAkB4C,EAAlB5C,KAAMD,EAAY6C,EAAZ7C,QAEZ,OAAQC,GACN,IAAK,SACH,MAAO,CAAEqB,cAAetB,GAAWS,KAAKE,UAC1C,IAAK,QACH,OAAO6B,EACT,QACE,OAAOb,MEDPmB,EDAeC,YAAYN,GCUjC,IAAMO,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOrC,EAAAC,EAAAC,cAThB,WACE,OACEF,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAUP,MAAOA,GACf/B,EAAAC,EAAAC,cAACmB,EAAD,QAMU,MAAUY","file":"static/js/main.e6453ca4.chunk.js","sourcesContent":["\r\nconst appActions = {};\r\n\r\nappActions.change = payload => {\r\n  return {\r\n    type: 'CHANGE',\r\n    payload: payload,\r\n  };\r\n}\r\n\r\nappActions.reset = payload => {\r\n  return {\r\n    type: 'RESET',\r\n    payload: payload,\r\n  };\r\n}\r\n\r\nexport {appActions};","\r\nconst actions = {};\r\n\r\nactions.changeNum = payload => {\r\n  return {\r\n    type: 'CHANGE',\r\n    payload: payload,\r\n  };\r\n}\r\n\r\nactions.resetNum = payload => {\r\n  return {\r\n    type: 'RESET',\r\n    payload: payload,\r\n  };\r\n}\r\n\r\nexport {actions};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// import * as actions from '../store/app-actions.js';\r\nimport {actions} from '../store/numbers-actions';\r\n\r\nfunction getRandomInt(max) {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\nclass Number extends React.Component {\r\n\r\n  changeMyNumber = () => {\r\n\r\n    let randNum = getRandomInt(100)\r\n    this.props.handleChange(randNum);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n      <div onClick={this.changeMyNumber}>\r\n        NUMBER: {this.props.numbers.currentNumber}\r\n      </div>\r\n      <div onClick={this.props.handleReset}>\r\n        RESET\r\n      </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  numbers: state.numbers,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, getState) => ({\r\n  handleChange: (newNumber) => dispatch(actions.changeNum(newNumber)),\r\n  handleReset: () => dispatch(actions.resetNum())\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Number);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {appActions} from '../store/app-actions';\r\nimport Numbers from './numbers';\r\n\r\nclass App extends React.Component {\r\n\r\n  changeMyName = () => {\r\n    let words = ['foo','bar','baz'];\r\n    let word = words[ Math.floor(Math.random()*words.length) ];\r\n    this.props.handleChange(word);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n      <Numbers />\r\n      <div onClick={this.changeMyName}>\r\n        NAME: {this.props.app.name}\r\n      </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  app: state.app,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, getState) => ({\r\n  handleChange: (newName) => dispatch(appActions.change(newName)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(App);\r\n","let initialState = { name: 'John' };\r\n\r\nexport default (state = initialState, action) => {\r\n  let { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case 'CHANGE':\r\n      return { name: payload || Math.random() };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","let initialState = { currentNumber: 69 };\r\n\r\nexport default (state = initialState, action) => {\r\n  let { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case 'CHANGE':\r\n      return { currentNumber: payload || Math.random() };\r\n    case 'RESET':\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers } from 'redux';\r\n\r\nimport appReducer from './app-reducers.js';\r\nimport numbersReducer from './numbers-reducer.js';\r\n\r\nlet reducers = combineReducers({\r\n  app: appReducer,\r\n  numbers: numbersReducer\r\n});\r\n\r\nexport default () => createStore(reducers);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './style.scss';\r\n\r\nimport App from './components/app.js';\r\nimport Numbers from './components/numbers';\r\n\r\nimport createStore from './store/';\r\nconst store = createStore();\r\n\r\nfunction Main() {\r\n  return (\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById('root');\r\nReactDOM.render(<Main />, rootElement);\r\n"],"sourceRoot":""}